{"pageProps":{"docs":[{"frontMatter":{"title":"API Reference","date":"July 25, 2021","description":"Provider API","thumbnailUrl":"/python-variables-thumbnail.jpeg","tags":["api","public","reference","provider"]},"slug":"api-reference"},{"frontMatter":{"title":"Public API v1","date":"July 25, 2021","description":"Public API v1 documentation","thumbnailUrl":"/python-variables-thumbnail.jpeg","tags":["api","public","v1"]},"slug":"api-v1"},{"frontMatter":{"title":"Introduction","date":"August 4, 2022","description":"Introduction to Z3US wallet","thumbnailUrl":"/javascript-functions-thumbnail.jpeg","tags":["introduction","intro"]},"slug":"introduction"},{"frontMatter":{"title":"Privacy","date":"August 4, 2022","description":"Privacy policy","thumbnailUrl":"/thumbnail.jpeg","tags":["privacy"]},"slug":"privacy"},{"frontMatter":{"title":"Terms","date":"August 4, 2022","description":"Terms","thumbnailUrl":"/thumbnail.jpeg","tags":["terms"]},"slug":"terms"}],"frontMatter":{"title":"Public API v1","date":"July 25, 2021","description":"Public API v1 documentation","thumbnailUrl":"/python-variables-thumbnail.jpeg","tags":["api","public","v1"]},"slug":"api-v1","mdxSource":{"compiledSource":"var c=Object.defineProperty,h=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var l=(e,n,t)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,s=(e,n)=>{for(var t in n||(n={}))r.call(n,t)&&l(e,t,n[t]);if(i)for(var t of i(n))a.call(n,t)&&l(e,t,n[t]);return e},p=(e,n)=>h(e,m(n));var d=(e,n)=>{var t={};for(var o in e)r.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&i)for(var o of i(e))n.indexOf(o)<0&&a.call(e,o)&&(t[o]=e[o]);return t};const makeShortcode=e=>function(t){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",s({},t))},ExampleV1=makeShortcode(\"ExampleV1\"),SyntaxHighlighter=makeShortcode(\"SyntaxHighlighter\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,n=d(o,[\"components\"]);return mdx(MDXLayout,p(s(s({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(ExampleV1,{mdxType:\"ExampleV1\"}),mdx(\"h1\",null,\"v1\"),mdx(\"p\",null,`Provider API is promise based, and user is expected to catch and handle errors,\npromises will resolve whenever possible. It is up to the user to handle timeouts if promise hangs.`),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\ndeclare global {\n\tinterface Window {\n\t\tz3us: {\n\t\t\tv1: {\n\t\t\t\thasWallet: () => Promise<boolean>\n\t\t\t\tisConnected: () => Promise<boolean>\n\t\t\t\tconnect: () => Promise<string>\n\t\t\t\taddresses: () => Promise<string[]>\n\t\t\t\tdisconnect: () => Promise<void>\n\t\t\t\tencrypt: (message: string, fromAddress: string, toAddress: string) => Promise<string>\n\t\t\t\tdecrypt: (message: string, fromAddress: string) => Promise<string>\n\t\t\t\tbalances: () => Promise<unknown>\n\t\t\t\tstakes: () => Promise<unknown>\n\t\t\t\tunstakes: () => Promise<unknown>\n\t\t\t\tsendTransaction: (payload: { symbol: string; fromAddress: string; transaction: any }) => Promise<any>\n\t\t\t}\n\t\t}\n\t}\n}\n  `),mdx(\"h2\",null,\"Error handling\"),mdx(\"p\",null,\"To handle errors simply use \",mdx(\"inlineCode\",{parentName:\"p\"},\"try/catch\"),` block, function will throw in case of action declined or unexpected error.\nThere is no timeout at the moment on the promise, be carefull to avoid deadlocks and handle resonable timouts on your webiste according to your action.`),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\ntry {\n\tconst response = await window.z3us.v1.balances()\n} catch (error) {\n\tconsole.error(error)\n}\n  `),mdx(\"h2\",null,\"Connecting\"),mdx(\"p\",null,\"Priaror to connecting please verify that \",mdx(\"inlineCode\",{parentName:\"p\"},\"window.z3us\"),\" is available and that user has initialized their wallet. To \",mdx(\"strong\",{parentName:\"p\"},\"connect\"),\" use \",mdx(\"inlineCode\",{parentName:\"p\"},\"window.z3us.v1.connect()\"),\" which will return currently selected address.\"),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\nif (window.z3us) {\n\treturn\n}\nconst hasWallet = await window.z3us.v1.hasWallet()\nif (!hasWallet) {\n\treturn\n}\nconst selectedAddress = await window.z3us.v1.connect()\n  `),mdx(\"p\",null,\"Once user authorizes your website, the extension popup will not show again (unless they remove the permissions) and \",mdx(\"inlineCode\",{parentName:\"p\"},\"connect\"),\" method will return selected address.\"),mdx(\"h2\",null,\"Disconnecting\"),mdx(\"p\",null,\"Your webiste might be disconnected by user from extension popup or you can call \",mdx(\"strong\",{parentName:\"p\"},\"disconnect\"),\" method, which will trigger extension popup again next time you call \",mdx(\"strong\",{parentName:\"p\"},\"connect\"),\".\"),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\nawait window.z3us.v1.disconnect()\n  `),mdx(\"p\",null,mdx(\"a\",s({parentName:\"p\"},{href:\"https://z3us.com\"}),\"Z3US\"),\" injects a global API into websites visited by its users at \",mdx(\"inlineCode\",{parentName:\"p\"},\"window.z3us\"),\". This API allows users to interact with wallet and \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://www.radixdlt.com/\"}),\"Radix DLT\"),\".\"),mdx(\"h2\",null,\"Example\"),mdx(\"h3\",null,\"React implementation\"),mdx(\"p\",null,\"If you wish to see code used for this demo please visit our \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://github.com/z3us-dapps/z3us/blob/master/apps/website/components/pages/example-v1/index.tsx\"}),\"example\"),`.\nImplementation may contain errors, it is meant as an example and reference only.`))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}