{"pageProps":{"docs":[{"frontMatter":{"title":"API Reference","order":2},"slug":"api-reference"},{"frontMatter":{"title":"Public API v1","order":3},"slug":"api-v1"},{"frontMatter":{"title":"Introduction","order":1},"slug":"introduction"},{"frontMatter":{"title":"Privacy","date":"August 4, 2022","description":"Privacy policy","thumbnailUrl":"/thumbnail.jpeg","tags":["privacy"],"hideFromMenu":true},"slug":"privacy"},{"frontMatter":{"title":"Terms","date":"August 4, 2022","description":"Terms","thumbnailUrl":"/thumbnail.jpeg","tags":["terms"],"hideFromMenu":true},"slug":"terms"}],"frontMatter":{"title":"Public API v1","order":3},"slug":"api-v1","mdxSource":{"compiledSource":"var c=Object.defineProperty,h=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var a=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))a.call(t,n)&&l(e,n,t[n]);if(i)for(var n of i(t))r.call(t,n)&&l(e,n,t[n]);return e},d=(e,t)=>h(e,m(t));var p=(e,t)=>{var n={};for(var o in e)a.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(e!=null&&i)for(var o of i(e))t.indexOf(o)<0&&r.call(e,o)&&(n[o]=e[o]);return n};const makeShortcode=e=>function(n){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",s({},n))},ExampleV1=makeShortcode(\"ExampleV1\"),SyntaxHighlighter=makeShortcode(\"SyntaxHighlighter\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var o=n,{components:e}=o,t=p(o,[\"components\"]);return mdx(MDXLayout,d(s(s({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(ExampleV1,{mdxType:\"ExampleV1\"}),mdx(\"h1\",null,\"v1\"),mdx(\"p\",null,`Provider API is promise based, and user is expected to catch and handle errors,\npromises will resolve whenever possible. It is up to the user to handle timeouts if promise hangs.`),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\ndeclare global {\n\tinterface Window {\n\t\tz3us: {\n\t\t\tv1: {\n\t\t\t\thasWallet: () => Promise<boolean>\n\t\t\t\tisConnected: () => Promise<boolean>\n\t\t\t\tconnect: () => Promise<string>\n\t\t\t\taddresses: () => Promise<string[]>\n\t\t\t\tdisconnect: () => Promise<void>\n\t\t\t\tencrypt: (message: string, fromAddress: string, toAddress: string) => Promise<string>\n\t\t\t\tdecrypt: (message: string, fromAddress: string) => Promise<string>\n\t\t\t\tbalances: () => Promise<unknown>\n\t\t\t\tstakes: () => Promise<unknown>\n\t\t\t\tunstakes: () => Promise<unknown>\n\t\t\t\tsendTransaction: (payload: { symbol: string; fromAddress: string; transaction: any }) => Promise<any>\n\t\t\t}\n\t\t}\n\t}\n}\n  `),mdx(\"h2\",null,\"Error handling\"),mdx(\"p\",null,\"To handle errors in a simple manner, use \",mdx(\"inlineCode\",{parentName:\"p\"},\"try/catch\"),\" block, function will throw in case of action declined or unexpected error. There is no timeout at the moment on the promise, be careful to avoid deadlocks and handle reasonable timeouts on your website according to your action.\"),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\ntry {\n\tconst response = await window.z3us.v1.balances()\n} catch (error) {\n\tconsole.error(error)\n}\n  `),mdx(\"h2\",null,\"Connecting\"),mdx(\"p\",null,\"Prior to connecting, please verify that \",mdx(\"inlineCode\",{parentName:\"p\"},\"window.z3us\"),\" is available and that user has initialised their wallet. To connect use window.z3us.v1.connect() which will return the currently selected address.\"),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\nif (window.z3us) {\n\treturn\n}\nconst hasWallet = await window.z3us.v1.hasWallet()\nif (!hasWallet) {\n\treturn\n}\nconst selectedAddress = await window.z3us.v1.connect()\n  `),mdx(\"p\",null,\"Once the user authorises your website, the extension popup will not show again (unless they remove the permissions) and the \",mdx(\"inlineCode\",{parentName:\"p\"},\"connect\"),\" method will return the selected address.\"),mdx(\"h2\",null,\"Disconnecting\"),mdx(\"p\",null,\"Your website might be disconnected by the user, or you can call \",mdx(\"em\",{parentName:\"p\"},\"disconnect\"),\" method, which will trigger extension popup again next time you call connect.\"),mdx(SyntaxHighlighter,{language:\"typescript\",mdxType:\"SyntaxHighlighter\"},`\nawait window.z3us.v1.disconnect()\n  `),mdx(\"p\",null,mdx(\"a\",s({parentName:\"p\"},{href:\"https://z3us.com\"}),\"Z3US\"),\" injects a global API into websites visited by its users at \",mdx(\"inlineCode\",{parentName:\"p\"},\"window.z3us\"),\". This API allows users to interact with wallet and \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://www.radixdlt.com/\"}),\"Radix DLT\"),\".\"),mdx(\"h2\",null,\"Example\"),mdx(\"h3\",null,\"React implementation\"),mdx(\"p\",null,\"If you wish to see code used for this demo please visit our \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://github.com/z3us-dapps/z3us/blob/master/apps/website/components/pages/example-v1/index.tsx\"}),\"example\"),`.\nImplementation may contain errors, it is meant as an example and reference only.`))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}